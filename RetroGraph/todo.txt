look into using shaders to perform particle calculations

particles get stuck in corners

implement 30 min work/rest timer

sleep until next frame

store measures in smart pointers to control lifetime manually to start/stop measuring
disable data gathering for non-visible widgets to save on CPU - store dependencies in a list,
only destroy a measure if all dependencies are destroyed.

use gl lists to draw things like graph grids

BUG: having lower tick lengths causes updates in  most widgets to occur every 2-3 sec instead of .5 sec

high-performance mode - switch between low and high FPS for main widget, graphs

lower bound on the network graph scaling

foobar media controls - enter foobar path in config file

Volume + Audio device widget

Handle invalid config values

Widgets: Allow free position (x, y coords), full alignment options 
(centered, left, top eg.) and a mix of centering and coords (vertical center with x coords)

Allow user-defined ordering of widgets in multi-widget positions

fix vertical text line centering

network: show how many MB have been downloaded since retrograph started

change font colour

Music widget:
    Play/paused indication
    make song name 2 lines if it's too long

display information (resolution)

retrograph performance stats (clocks per frame, RAM, etc)

animate on startup

colour code high usage processes

hdd read/write usage

3D effects on graph

have config options for polling intervals of individual measures

separate net traffic graphs

have an average ping time display

test suite


NOTES:
Foobar status format:
%title% | [%album artist%] | [%album%[ CD%discnumber%][ #%tracknumber%]] | $if(%ispaused%,Paused,Playing) | [%_time_elapsed_seconds%, %_time_total_seconds%] | 


spacial partitioning: compare resetting cell vectors each update vs updating cells on each movement

8x8 cells:
~770 checks done
Update(): 6.72%
drawParticles(): 13.62%
total: 20.44%

16x16 cells:
~200 checks done
Update(): 11.98%
drawParticles(): 12.24%

No grid resets (1.2 - 1.6 procexp):
	8x8 (~780):
		update(): 3.79%, 1.74, 2.15
		drawParticles(): 16.43, 15.93, 12.9

	16x16 (160-200):
		update(): 2.57%
		drawParticles(): 11.76

Grid resets (1.3 - 1.8 procexp):
update(): 8.31%, 6.93%
drawParticles(): 9.79%, 14.07%